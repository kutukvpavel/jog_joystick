ARM GAS  /tmp/ccWEu19f.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"list.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/list.c"
  18              		.section	.text.vListInitialise,"ax",%progbits
  19              		.align	1
  20              		.global	vListInitialise
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	vListInitialise:
  26              	.LVL0:
  27              	.LFB4:
   1:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "FreeRTOS.h"
  31:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "list.h"
ARM GAS  /tmp/ccWEu19f.s 			page 2


  32:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  33:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------
  34:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * PUBLIC LIST API documented in list.h
  35:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *----------------------------------------------------------*/
  36:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialise( List_t * const pxList )
  38:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  28              		.loc 1 38 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list structure contains a list item which is used to mark the
  40:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  41:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	as the only list entry. */
  42:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list struc
  33              		.loc 1 42 2 view .LVU1
  43:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end value is the highest possible value in the list to
  45:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	ensure it remains at the end of the list. */
  46:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  34              		.loc 1 46 30 is_stmt 0 view .LVU2
  35 0000 4FF0FF32 		mov	r2, #-1
  42:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  36              		.loc 1 42 37 view .LVU3
  37 0004 00F10803 		add	r3, r0, #8
  47:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  48:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  49:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	when the list is empty. */
  50:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list
  38              		.loc 1 50 26 view .LVU4
  39 0008 C0E90223 		strd	r2, r3, [r0, #8]
  42:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  40              		.loc 1 42 18 view .LVU5
  41 000c 4360     		str	r3, [r0, #4]
  46:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  42              		.loc 1 46 2 is_stmt 1 view .LVU6
  51:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini l
  43              		.loc 1 51 2 view .LVU7
  44              		.loc 1 51 30 is_stmt 0 view .LVU8
  45 000e 0361     		str	r3, [r0, #16]
  52:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  53:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  46              		.loc 1 53 2 is_stmt 1 view .LVU9
  47              		.loc 1 53 26 is_stmt 0 view .LVU10
  48 0010 0023     		movs	r3, #0
  49 0012 0360     		str	r3, [r0]
  54:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list if
  56:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  57:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  50              		.loc 1 57 48 is_stmt 1 view .LVU11
  58:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  51              		.loc 1 58 48 view .LVU12
  59:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
  52              		.loc 1 59 1 is_stmt 0 view .LVU13
  53 0014 7047     		bx	lr
ARM GAS  /tmp/ccWEu19f.s 			page 3


  54              		.cfi_endproc
  55              	.LFE4:
  57              		.section	.text.vListInitialiseItem,"ax",%progbits
  58              		.align	1
  59              		.global	vListInitialiseItem
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  64              	vListInitialiseItem:
  65              	.LVL1:
  66              	.LFB5:
  60:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
  61:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  62:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  63:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  67              		.loc 1 63 1 is_stmt 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  64:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
  65:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItem->pvContainer = NULL;
  72              		.loc 1 65 2 view .LVU15
  73              		.loc 1 65 22 is_stmt 0 view .LVU16
  74 0000 0023     		movs	r3, #0
  75 0002 0361     		str	r3, [r0, #16]
  66:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list item if
  68:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  69:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  76              		.loc 1 69 57 is_stmt 1 view .LVU17
  70:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  77              		.loc 1 70 58 view .LVU18
  71:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
  78              		.loc 1 71 1 is_stmt 0 view .LVU19
  79 0004 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE5:
  83              		.section	.text.vListInsertEnd,"ax",%progbits
  84              		.align	1
  85              		.global	vListInsertEnd
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  90              	vListInsertEnd:
  91              	.LVL2:
  92              	.LFB6:
  72:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
  73:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
  75:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  93              		.loc 1 75 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  76:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
ARM GAS  /tmp/ccWEu19f.s 			page 4


  98              		.loc 1 76 1 view .LVU21
  99              		.loc 1 76 20 is_stmt 0 view .LVU22
 100 0000 4368     		ldr	r3, [r0, #4]
 101              	.LVL3:
  77:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
  79:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
  80:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
  81:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 102              		.loc 1 81 35 is_stmt 1 view .LVU23
  82:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 103              		.loc 1 82 47 view .LVU24
  83:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
  85:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	makes the new list item the last item to be removed by a call to
  86:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listGET_OWNER_OF_NEXT_ENTRY(). */
  87:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
 104              		.loc 1 87 2 view .LVU25
  88:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 105              		.loc 1 88 37 is_stmt 0 view .LVU26
 106 0002 9A68     		ldr	r2, [r3, #8]
  87:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 107              		.loc 1 87 24 view .LVU27
 108 0004 4B60     		str	r3, [r1, #4]
 109              		.loc 1 88 2 is_stmt 1 view .LVU28
 110              		.loc 1 88 28 is_stmt 0 view .LVU29
 111 0006 8A60     		str	r2, [r1, #8]
  89:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
  91:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 112              		.loc 1 91 25 is_stmt 1 view .LVU30
  92:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
 113              		.loc 1 93 2 view .LVU31
 114              		.loc 1 93 30 is_stmt 0 view .LVU32
 115 0008 5160     		str	r1, [r2, #4]
  94:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 116              		.loc 1 94 2 is_stmt 1 view .LVU33
 117              		.loc 1 94 22 is_stmt 0 view .LVU34
 118 000a 9960     		str	r1, [r3, #8]
  95:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in. */
  97:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 119              		.loc 1 97 2 is_stmt 1 view .LVU35
  98:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  99:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 120              		.loc 1 99 10 is_stmt 0 view .LVU36
 121 000c 0368     		ldr	r3, [r0]
 122              	.LVL4:
  97:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 123              		.loc 1 97 29 view .LVU37
 124 000e 0861     		str	r0, [r1, #16]
 125              		.loc 1 99 2 is_stmt 1 view .LVU38
 126              		.loc 1 99 29 is_stmt 0 view .LVU39
 127 0010 0133     		adds	r3, r3, #1
 128 0012 0360     		str	r3, [r0]
 100:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
ARM GAS  /tmp/ccWEu19f.s 			page 5


 129              		.loc 1 100 1 view .LVU40
 130 0014 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE6:
 134              		.section	.text.vListInsert,"ax",%progbits
 135              		.align	1
 136              		.global	vListInsert
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	vListInsert:
 142              	.LVL5:
 143              	.LFB7:
 101:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 102:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
 104:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 144              		.loc 1 104 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 105:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 148              		.loc 1 105 1 view .LVU42
 106:Middlewares/Third_Party/FreeRTOS/Source/list.c **** const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 149              		.loc 1 106 1 view .LVU43
 104:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 150              		.loc 1 104 1 is_stmt 0 view .LVU44
 151 0000 30B5     		push	{r4, r5, lr}
 152              		.cfi_def_cfa_offset 12
 153              		.cfi_offset 4, -12
 154              		.cfi_offset 5, -8
 155              		.cfi_offset 14, -4
 156              		.loc 1 106 18 view .LVU45
 157 0002 0C68     		ldr	r4, [r1]
 158              	.LVL6:
 107:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 109:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 110:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 111:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 159              		.loc 1 111 35 is_stmt 1 view .LVU46
 112:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 160              		.loc 1 112 47 view .LVU47
 113:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert the new list item into the list, sorted in xItemValue order.
 115:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 116:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	If the list already contains a list item with the same item value then the
 117:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	new list item should be placed after it.  This ensures that TCB's which are
 118:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	stored in ready lists (all of which have the same xItemValue value) get a
 119:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	share of the CPU.  However, if the xItemValue is the same as the back marker
 120:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the iteration loop below will not end.  Therefore the value is checked
 121:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	first, and the algorithm slightly modified if necessary. */
 122:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 161              		.loc 1 122 2 view .LVU48
 162              		.loc 1 122 4 is_stmt 0 view .LVU49
 163 0004 631C     		adds	r3, r4, #1
 164 0006 0AD1     		bne	.L5
ARM GAS  /tmp/ccWEu19f.s 			page 6


 123:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 124:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 165              		.loc 1 124 3 is_stmt 1 view .LVU50
 166              		.loc 1 124 14 is_stmt 0 view .LVU51
 167 0008 0369     		ldr	r3, [r0, #16]
 168              	.LVL7:
 169              	.L6:
 125:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 126:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 127:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 128:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		/* *** NOTE ***********************************************************
 129:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		If you find your application is crashing here then likely causes are
 130:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		listed below.  In addition see http://www.freertos.org/FAQHelp.html for
 131:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		more tips, and ensure configASSERT() is defined!
 132:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		http://www.freertos.org/a00110.html#configASSERT
 133:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			1) Stack overflow -
 135:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   see http://www.freertos.org/Stacks-and-stack-overflow-checking.html
 136:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M
 137:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   parts where numerically high priority values denote low actual
 138:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   interrupt priorities, which can seem counter intuitive.  See
 139:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/RTOS-Cortex-M3-M4.html and the definition
 140:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 141:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/a00110.html
 142:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			3) Calling an API function from within a critical section or when
 143:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 144:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   not end in "FromISR" from an interrupt.
 145:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 146:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 147:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 148:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		**********************************************************************/
 149:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValu
 151:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 152:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			/* There is nothing to do here, just iterating to the wanted
 153:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			insertion position. */
 154:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		}
 155:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 156:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 170              		.loc 1 157 2 is_stmt 1 view .LVU52
 171              		.loc 1 157 36 is_stmt 0 view .LVU53
 172 000a 5A68     		ldr	r2, [r3, #4]
 173              		.loc 1 157 24 view .LVU54
 174 000c 4A60     		str	r2, [r1, #4]
 158:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 175              		.loc 1 158 2 is_stmt 1 view .LVU55
 176              		.loc 1 158 36 is_stmt 0 view .LVU56
 177 000e 9160     		str	r1, [r2, #8]
 159:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 178              		.loc 1 159 2 is_stmt 1 view .LVU57
 179              		.loc 1 159 28 is_stmt 0 view .LVU58
 180 0010 8B60     		str	r3, [r1, #8]
 160:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 181              		.loc 1 160 2 is_stmt 1 view .LVU59
 182              		.loc 1 160 21 is_stmt 0 view .LVU60
 183 0012 5960     		str	r1, [r3, #4]
ARM GAS  /tmp/ccWEu19f.s 			page 7


 161:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 162:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 163:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	item later. */
 164:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 184              		.loc 1 164 2 is_stmt 1 view .LVU61
 165:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 185              		.loc 1 166 10 is_stmt 0 view .LVU62
 186 0014 0368     		ldr	r3, [r0]
 187              	.LVL8:
 164:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 188              		.loc 1 164 29 view .LVU63
 189 0016 0861     		str	r0, [r1, #16]
 190              		.loc 1 166 2 is_stmt 1 view .LVU64
 191              		.loc 1 166 29 is_stmt 0 view .LVU65
 192 0018 0133     		adds	r3, r3, #1
 193 001a 0360     		str	r3, [r0]
 167:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 194              		.loc 1 167 1 view .LVU66
 195 001c 30BD     		pop	{r4, r5, pc}
 196              	.LVL9:
 197              	.L5:
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 198              		.loc 1 150 3 is_stmt 1 view .LVU67
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 199              		.loc 1 150 19 is_stmt 0 view .LVU68
 200 001e 00F10802 		add	r2, r0, #8
 201              	.LVL10:
 202              	.L7:
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 203              		.loc 1 150 92 is_stmt 1 discriminator 1 view .LVU69
 204 0022 1346     		mov	r3, r2
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 205              		.loc 1 150 71 is_stmt 0 discriminator 1 view .LVU70
 206 0024 5268     		ldr	r2, [r2, #4]
 207              	.LVL11:
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 208              		.loc 1 150 92 discriminator 1 view .LVU71
 209 0026 1568     		ldr	r5, [r2]
 210 0028 A542     		cmp	r5, r4
 211 002a FAD9     		bls	.L7
 212 002c EDE7     		b	.L6
 213              		.cfi_endproc
 214              	.LFE7:
 216              		.section	.text.uxListRemove,"ax",%progbits
 217              		.align	1
 218              		.global	uxListRemove
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	uxListRemove:
 224              	.LVL12:
 225              	.LFB8:
 168:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 169:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 170:Middlewares/Third_Party/FreeRTOS/Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 171:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
ARM GAS  /tmp/ccWEu19f.s 			page 8


 226              		.loc 1 171 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 172:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 173:Middlewares/Third_Party/FreeRTOS/Source/list.c **** item. */
 174:Middlewares/Third_Party/FreeRTOS/Source/list.c **** List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
 231              		.loc 1 174 1 view .LVU73
 232              		.loc 1 174 16 is_stmt 0 view .LVU74
 233 0000 0369     		ldr	r3, [r0, #16]
 234              	.LVL13:
 175:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 235              		.loc 1 176 2 is_stmt 1 view .LVU75
 236              		.loc 1 176 53 is_stmt 0 view .LVU76
 237 0002 D0E90112 		ldrd	r1, r2, [r0, #4]
 238              		.loc 1 176 37 view .LVU77
 239 0006 8A60     		str	r2, [r1, #8]
 177:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 240              		.loc 1 177 2 is_stmt 1 view .LVU78
 241              		.loc 1 177 37 is_stmt 0 view .LVU79
 242 0008 5160     		str	r1, [r2, #4]
 178:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 180:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 243              		.loc 1 180 25 is_stmt 1 view .LVU80
 181:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 182:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 183:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 244              		.loc 1 183 2 view .LVU81
 245              		.loc 1 183 4 is_stmt 0 view .LVU82
 246 000a 5968     		ldr	r1, [r3, #4]
 247 000c 8142     		cmp	r1, r0
 184:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 185:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 248              		.loc 1 185 3 is_stmt 1 view .LVU83
 249              		.loc 1 185 19 is_stmt 0 view .LVU84
 250 000e 08BF     		it	eq
 251 0010 5A60     		streq	r2, [r3, #4]
 186:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 187:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 188:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 189:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		mtCOVERAGE_TEST_MARKER();
 252              		.loc 1 189 27 is_stmt 1 view .LVU85
 190:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pvContainer = NULL;
 253              		.loc 1 192 2 view .LVU86
 254              		.loc 1 192 30 is_stmt 0 view .LVU87
 255 0012 0022     		movs	r2, #0
 256 0014 0261     		str	r2, [r0, #16]
 193:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 257              		.loc 1 193 2 is_stmt 1 view .LVU88
 258              		.loc 1 193 10 is_stmt 0 view .LVU89
 259 0016 1A68     		ldr	r2, [r3]
 260              		.loc 1 193 29 view .LVU90
ARM GAS  /tmp/ccWEu19f.s 			page 9


 261 0018 013A     		subs	r2, r2, #1
 262 001a 1A60     		str	r2, [r3]
 194:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	return pxList->uxNumberOfItems;
 263              		.loc 1 195 2 is_stmt 1 view .LVU91
 264              		.loc 1 195 15 is_stmt 0 view .LVU92
 265 001c 1868     		ldr	r0, [r3]
 266              	.LVL14:
 196:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 267              		.loc 1 196 1 view .LVU93
 268 001e 7047     		bx	lr
 269              		.cfi_endproc
 270              	.LFE8:
 272              		.text
 273              	.Letext0:
 274              		.file 2 "/home/paul/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-none
 275              		.file 3 "/home/paul/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-none
 276              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 277              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
ARM GAS  /tmp/ccWEu19f.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 list.c
     /tmp/ccWEu19f.s:19     .text.vListInitialise:00000000 $t
     /tmp/ccWEu19f.s:25     .text.vListInitialise:00000000 vListInitialise
     /tmp/ccWEu19f.s:58     .text.vListInitialiseItem:00000000 $t
     /tmp/ccWEu19f.s:64     .text.vListInitialiseItem:00000000 vListInitialiseItem
     /tmp/ccWEu19f.s:84     .text.vListInsertEnd:00000000 $t
     /tmp/ccWEu19f.s:90     .text.vListInsertEnd:00000000 vListInsertEnd
     /tmp/ccWEu19f.s:135    .text.vListInsert:00000000 $t
     /tmp/ccWEu19f.s:141    .text.vListInsert:00000000 vListInsert
     /tmp/ccWEu19f.s:217    .text.uxListRemove:00000000 $t
     /tmp/ccWEu19f.s:223    .text.uxListRemove:00000000 uxListRemove

NO UNDEFINED SYMBOLS
