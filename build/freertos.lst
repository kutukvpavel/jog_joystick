ARM GAS  /tmp/cctWkPdS.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/freertos.c"
  18              		.section	.text.StartDefaultTask,"ax",%progbits
  19              		.align	1
  20              		.global	StartDefaultTask
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	StartDefaultTask:
  26              	.LFB70:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** 
  29:Core/Src/freertos.c **** /* USER CODE END Includes */
  30:Core/Src/freertos.c **** 
  31:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/cctWkPdS.s 			page 2


  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END PTD */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PM */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END Variables */
  50:Core/Src/freertos.c **** /* Definitions for defaultTask */
  51:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
  52:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  53:Core/Src/freertos.c ****   .name = "defaultTask",
  54:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  55:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  56:Core/Src/freertos.c **** };
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  62:Core/Src/freertos.c **** 
  63:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
  64:Core/Src/freertos.c **** 
  65:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  66:Core/Src/freertos.c **** 
  67:Core/Src/freertos.c **** /**
  68:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  69:Core/Src/freertos.c ****   * @param  None
  70:Core/Src/freertos.c ****   * @retval None
  71:Core/Src/freertos.c ****   */
  72:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  73:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c ****   /* USER CODE END Init */
  76:Core/Src/freertos.c **** 
  77:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  78:Core/Src/freertos.c ****   /* add mutexes, ... */
  79:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  80:Core/Src/freertos.c **** 
  81:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  82:Core/Src/freertos.c ****   /* add semaphores, ... */
  83:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  86:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
  87:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
ARM GAS  /tmp/cctWkPdS.s 			page 3


  90:Core/Src/freertos.c ****   /* add queues, ... */
  91:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
  92:Core/Src/freertos.c **** 
  93:Core/Src/freertos.c ****   /* Create the thread(s) */
  94:Core/Src/freertos.c ****   /* creation of defaultTask */
  95:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
  96:Core/Src/freertos.c **** 
  97:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
  98:Core/Src/freertos.c ****   /* add threads, ... */
  99:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 100:Core/Src/freertos.c **** 
 101:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 102:Core/Src/freertos.c ****   /* add events, ... */
 103:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c **** }
 106:Core/Src/freertos.c **** 
 107:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 108:Core/Src/freertos.c **** /**
 109:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 110:Core/Src/freertos.c ****   * @param  argument: Not used
 111:Core/Src/freertos.c ****   * @retval None
 112:Core/Src/freertos.c ****   */
 113:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 114:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 115:Core/Src/freertos.c **** {
  27              		.loc 1 115 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33              		.loc 1 115 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  38              	.LVL1:
  39              	.L2:
 116:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 117:Core/Src/freertos.c ****   /* Infinite loop */
 118:Core/Src/freertos.c ****   for(;;)
  40              		.loc 1 118 3 is_stmt 1 discriminator 1 view .LVU2
 119:Core/Src/freertos.c ****   {
 120:Core/Src/freertos.c ****     osDelay(1);
  41              		.loc 1 120 5 discriminator 1 view .LVU3
  42 0002 0120     		movs	r0, #1
  43 0004 FFF7FEFF 		bl	osDelay
  44              	.LVL2:
 118:Core/Src/freertos.c ****   {
  45              		.loc 1 118 3 discriminator 1 view .LVU4
  46 0008 FBE7     		b	.L2
  47              		.cfi_endproc
  48              	.LFE70:
  50              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  51              		.align	1
  52              		.global	MX_FREERTOS_Init
ARM GAS  /tmp/cctWkPdS.s 			page 4


  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  57              	MX_FREERTOS_Init:
  58              	.LFB69:
  72:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  59              		.loc 1 72 29 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  95:Core/Src/freertos.c **** 
  63              		.loc 1 95 3 view .LVU6
  72:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  64              		.loc 1 72 29 is_stmt 0 view .LVU7
  65 0000 08B5     		push	{r3, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 3, -8
  68              		.cfi_offset 14, -4
  95:Core/Src/freertos.c **** 
  69              		.loc 1 95 23 view .LVU8
  70 0002 0021     		movs	r1, #0
  71 0004 034A     		ldr	r2, .L4
  72 0006 0448     		ldr	r0, .L4+4
  73 0008 FFF7FEFF 		bl	osThreadNew
  74              	.LVL3:
  95:Core/Src/freertos.c **** 
  75              		.loc 1 95 21 view .LVU9
  76 000c 034B     		ldr	r3, .L4+8
  77 000e 1860     		str	r0, [r3]
 105:Core/Src/freertos.c **** 
  78              		.loc 1 105 1 view .LVU10
  79 0010 08BD     		pop	{r3, pc}
  80              	.L5:
  81 0012 00BF     		.align	2
  82              	.L4:
  83 0014 00000000 		.word	defaultTask_attributes
  84 0018 00000000 		.word	StartDefaultTask
  85 001c 00000000 		.word	defaultTaskHandle
  86              		.cfi_endproc
  87              	.LFE69:
  89              		.global	defaultTask_attributes
  90              		.section	.rodata.str1.1,"aMS",%progbits,1
  91              	.LC0:
  92 0000 64656661 		.ascii	"defaultTask\000"
  92      756C7454 
  92      61736B00 
  93              		.section	.rodata.defaultTask_attributes,"a"
  94              		.align	2
  97              	defaultTask_attributes:
  98 0000 00000000 		.word	.LC0
  99 0004 00000000 		.space	16
  99      00000000 
  99      00000000 
  99      00000000 
 100 0014 00020000 		.word	512
 101 0018 18000000 		.word	24
 102 001c 00000000 		.space	8
ARM GAS  /tmp/cctWkPdS.s 			page 5


 102      00000000 
 103              		.global	defaultTaskHandle
 104              		.section	.bss.defaultTaskHandle,"aw",%nobits
 105              		.align	2
 108              	defaultTaskHandle:
 109 0000 00000000 		.space	4
 110              		.text
 111              	.Letext0:
 112              		.file 2 "/home/paul/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-none
 113              		.file 3 "/home/paul/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-none
 114              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  /tmp/cctWkPdS.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
     /tmp/cctWkPdS.s:19     .text.StartDefaultTask:00000000 $t
     /tmp/cctWkPdS.s:25     .text.StartDefaultTask:00000000 StartDefaultTask
     /tmp/cctWkPdS.s:51     .text.MX_FREERTOS_Init:00000000 $t
     /tmp/cctWkPdS.s:57     .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
     /tmp/cctWkPdS.s:83     .text.MX_FREERTOS_Init:00000014 $d
     /tmp/cctWkPdS.s:97     .rodata.defaultTask_attributes:00000000 defaultTask_attributes
     /tmp/cctWkPdS.s:108    .bss.defaultTaskHandle:00000000 defaultTaskHandle
     /tmp/cctWkPdS.s:94     .rodata.defaultTask_attributes:00000000 $d
     /tmp/cctWkPdS.s:105    .bss.defaultTaskHandle:00000000 $d

UNDEFINED SYMBOLS
osDelay
osThreadNew
