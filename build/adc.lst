ARM GAS  /tmp/cccjOHSb.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/adc.c"
  18              		.section	.text.MX_ADC1_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_ADC1_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_ADC1_Init:
  26              	.LFB65:
   1:Core/Src/adc.c **** /* USER CODE BEGIN Header */
   2:Core/Src/adc.c **** /**
   3:Core/Src/adc.c ****   ******************************************************************************
   4:Core/Src/adc.c ****   * @file    adc.c
   5:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/adc.c ****   *          of the ADC instances.
   7:Core/Src/adc.c ****   ******************************************************************************
   8:Core/Src/adc.c ****   * @attention
   9:Core/Src/adc.c ****   *
  10:Core/Src/adc.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/adc.c ****   * All rights reserved.
  12:Core/Src/adc.c ****   *
  13:Core/Src/adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/adc.c ****   * in the root directory of this software component.
  15:Core/Src/adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** /* USER CODE END Header */
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:Core/Src/adc.c **** DMA_HandleTypeDef hdma_adc1;
  29:Core/Src/adc.c **** 
  30:Core/Src/adc.c **** /* ADC1 init function */
  31:Core/Src/adc.c **** void MX_ADC1_Init(void)
  32:Core/Src/adc.c **** {
ARM GAS  /tmp/cccjOHSb.s 			page 2


  27              		.loc 1 32 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  31              		.loc 1 38 3 view .LVU1
  32:Core/Src/adc.c **** 
  32              		.loc 1 32 1 is_stmt 0 view .LVU2
  33 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 14, -4
  39:Core/Src/adc.c **** 
  40:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  41:Core/Src/adc.c **** 
  42:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  43:Core/Src/adc.c **** 
  44:Core/Src/adc.c ****   /** Common config
  45:Core/Src/adc.c ****   */
  46:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  36              		.loc 1 46 18 view .LVU3
  37 0002 3048     		ldr	r0, .L30
  38 0004 304A     		ldr	r2, .L30+4
  38:Core/Src/adc.c **** 
  39              		.loc 1 38 26 view .LVU4
  40 0006 0023     		movs	r3, #0
  41              		.loc 1 46 18 view .LVU5
  42 0008 0260     		str	r2, [r0]
  47:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  43              		.loc 1 47 27 view .LVU6
  44 000a 4FF48072 		mov	r2, #256
  38:Core/Src/adc.c **** 
  45              		.loc 1 38 26 view .LVU7
  46 000e CDE90133 		strd	r3, r3, [sp, #4]
  47 0012 0393     		str	r3, [sp, #12]
  46:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  48              		.loc 1 46 3 is_stmt 1 view .LVU8
  49              		.loc 1 47 3 view .LVU9
  50              		.loc 1 47 27 is_stmt 0 view .LVU10
  51 0014 8260     		str	r2, [r0, #8]
  48:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
  52              		.loc 1 48 3 is_stmt 1 view .LVU11
  53              		.loc 1 48 33 is_stmt 0 view .LVU12
  54 0016 0373     		strb	r3, [r0, #12]
  49:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  55              		.loc 1 49 3 is_stmt 1 view .LVU13
  50:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
  56              		.loc 1 50 31 is_stmt 0 view .LVU14
  57 0018 4FF40022 		mov	r2, #524288
  49:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  58              		.loc 1 49 36 view .LVU15
  59 001c 0375     		strb	r3, [r0, #20]
  60              		.loc 1 50 3 is_stmt 1 view .LVU16
ARM GAS  /tmp/cccjOHSb.s 			page 3


  51:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  61              		.loc 1 51 24 is_stmt 0 view .LVU17
  62 001e 4360     		str	r3, [r0, #4]
  52:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 6;
  63              		.loc 1 52 30 view .LVU18
  64 0020 0623     		movs	r3, #6
  50:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
  65              		.loc 1 50 31 view .LVU19
  66 0022 C261     		str	r2, [r0, #28]
  51:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  67              		.loc 1 51 3 is_stmt 1 view .LVU20
  68              		.loc 1 52 3 view .LVU21
  69              		.loc 1 52 30 is_stmt 0 view .LVU22
  70 0024 0361     		str	r3, [r0, #16]
  53:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  71              		.loc 1 53 3 is_stmt 1 view .LVU23
  72              		.loc 1 53 7 is_stmt 0 view .LVU24
  73 0026 FFF7FEFF 		bl	HAL_ADC_Init
  74              	.LVL0:
  75              		.loc 1 53 6 view .LVU25
  76 002a 08B1     		cbz	r0, .L2
  54:Core/Src/adc.c ****   {
  55:Core/Src/adc.c ****     Error_Handler();
  77              		.loc 1 55 5 is_stmt 1 view .LVU26
  78 002c FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              	.L2:
  56:Core/Src/adc.c ****   }
  57:Core/Src/adc.c **** 
  58:Core/Src/adc.c ****   /** Configure Regular Channel
  59:Core/Src/adc.c ****   */
  60:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_4;
  81              		.loc 1 60 3 view .LVU27
  61:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
  82              		.loc 1 61 16 is_stmt 0 view .LVU28
  83 0030 0123     		movs	r3, #1
  84 0032 0422     		movs	r2, #4
  85 0034 CDE90123 		strd	r2, r3, [sp, #4]
  62:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
  86              		.loc 1 62 3 is_stmt 1 view .LVU29
  87              		.loc 1 62 24 is_stmt 0 view .LVU30
  88 0038 0723     		movs	r3, #7
  63:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  89              		.loc 1 63 7 view .LVU31
  90 003a 2248     		ldr	r0, .L30
  91 003c 01A9     		add	r1, sp, #4
  62:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;
  92              		.loc 1 62 24 view .LVU32
  93 003e 0393     		str	r3, [sp, #12]
  94              		.loc 1 63 3 is_stmt 1 view .LVU33
  95              		.loc 1 63 7 is_stmt 0 view .LVU34
  96 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  97              	.LVL2:
  98              		.loc 1 63 6 view .LVU35
  99 0044 08B1     		cbz	r0, .L3
  64:Core/Src/adc.c ****   {
  65:Core/Src/adc.c ****     Error_Handler();
ARM GAS  /tmp/cccjOHSb.s 			page 4


 100              		.loc 1 65 5 is_stmt 1 view .LVU36
 101 0046 FFF7FEFF 		bl	Error_Handler
 102              	.LVL3:
 103              	.L3:
  66:Core/Src/adc.c ****   }
  67:Core/Src/adc.c **** 
  68:Core/Src/adc.c ****   /** Configure Regular Channel
  69:Core/Src/adc.c ****   */
  70:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_5;
 104              		.loc 1 70 3 view .LVU37
  71:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 105              		.loc 1 71 16 is_stmt 0 view .LVU38
 106 004a 4FF0050E 		mov	lr, #5
 107 004e 0223     		movs	r3, #2
  72:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 108              		.loc 1 72 7 view .LVU39
 109 0050 1C48     		ldr	r0, .L30
 110 0052 01A9     		add	r1, sp, #4
  71:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 111              		.loc 1 71 16 view .LVU40
 112 0054 CDE901E3 		strd	lr, r3, [sp, #4]
 113              		.loc 1 72 3 is_stmt 1 view .LVU41
 114              		.loc 1 72 7 is_stmt 0 view .LVU42
 115 0058 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 116              	.LVL4:
 117              		.loc 1 72 6 view .LVU43
 118 005c 08B1     		cbz	r0, .L4
  73:Core/Src/adc.c ****   {
  74:Core/Src/adc.c ****     Error_Handler();
 119              		.loc 1 74 5 is_stmt 1 view .LVU44
 120 005e FFF7FEFF 		bl	Error_Handler
 121              	.LVL5:
 122              	.L4:
  75:Core/Src/adc.c ****   }
  76:Core/Src/adc.c **** 
  77:Core/Src/adc.c ****   /** Configure Regular Channel
  78:Core/Src/adc.c ****   */
  79:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_6;
 123              		.loc 1 79 3 view .LVU45
  80:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 124              		.loc 1 80 16 is_stmt 0 view .LVU46
 125 0062 4FF0060C 		mov	ip, #6
 126 0066 0323     		movs	r3, #3
  81:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 127              		.loc 1 81 7 view .LVU47
 128 0068 1648     		ldr	r0, .L30
 129 006a 01A9     		add	r1, sp, #4
  80:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 130              		.loc 1 80 16 view .LVU48
 131 006c CDE901C3 		strd	ip, r3, [sp, #4]
 132              		.loc 1 81 3 is_stmt 1 view .LVU49
 133              		.loc 1 81 7 is_stmt 0 view .LVU50
 134 0070 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 135              	.LVL6:
 136              		.loc 1 81 6 view .LVU51
 137 0074 08B1     		cbz	r0, .L5
  82:Core/Src/adc.c ****   {
ARM GAS  /tmp/cccjOHSb.s 			page 5


  83:Core/Src/adc.c ****     Error_Handler();
 138              		.loc 1 83 5 is_stmt 1 view .LVU52
 139 0076 FFF7FEFF 		bl	Error_Handler
 140              	.LVL7:
 141              	.L5:
  84:Core/Src/adc.c ****   }
  85:Core/Src/adc.c **** 
  86:Core/Src/adc.c ****   /** Configure Regular Channel
  87:Core/Src/adc.c ****   */
  88:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_7;
 142              		.loc 1 88 3 view .LVU53
  89:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 143              		.loc 1 89 16 is_stmt 0 view .LVU54
 144 007a 0720     		movs	r0, #7
 145 007c 0423     		movs	r3, #4
 146 007e CDE90103 		strd	r0, r3, [sp, #4]
  90:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 147              		.loc 1 90 3 is_stmt 1 view .LVU55
 148              		.loc 1 90 7 is_stmt 0 view .LVU56
 149 0082 0DEB0301 		add	r1, sp, r3
 150 0086 0F48     		ldr	r0, .L30
 151 0088 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 152              	.LVL8:
 153              		.loc 1 90 6 view .LVU57
 154 008c 08B1     		cbz	r0, .L6
  91:Core/Src/adc.c ****   {
  92:Core/Src/adc.c ****     Error_Handler();
 155              		.loc 1 92 5 is_stmt 1 view .LVU58
 156 008e FFF7FEFF 		bl	Error_Handler
 157              	.LVL9:
 158              	.L6:
  93:Core/Src/adc.c ****   }
  94:Core/Src/adc.c **** 
  95:Core/Src/adc.c ****   /** Configure Regular Channel
  96:Core/Src/adc.c ****   */
  97:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_8;
 159              		.loc 1 97 3 view .LVU59
  98:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 160              		.loc 1 98 16 is_stmt 0 view .LVU60
 161 0092 0821     		movs	r1, #8
 162 0094 0523     		movs	r3, #5
  99:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 163              		.loc 1 99 7 view .LVU61
 164 0096 0B48     		ldr	r0, .L30
  98:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 165              		.loc 1 98 16 view .LVU62
 166 0098 CDE90113 		strd	r1, r3, [sp, #4]
 167              		.loc 1 99 3 is_stmt 1 view .LVU63
 168              		.loc 1 99 7 is_stmt 0 view .LVU64
 169 009c 01A9     		add	r1, sp, #4
 170 009e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 171              	.LVL10:
 172              		.loc 1 99 6 view .LVU65
 173 00a2 08B1     		cbz	r0, .L7
 100:Core/Src/adc.c ****   {
 101:Core/Src/adc.c ****     Error_Handler();
 174              		.loc 1 101 5 is_stmt 1 view .LVU66
ARM GAS  /tmp/cccjOHSb.s 			page 6


 175 00a4 FFF7FEFF 		bl	Error_Handler
 176              	.LVL11:
 177              	.L7:
 102:Core/Src/adc.c ****   }
 103:Core/Src/adc.c **** 
 104:Core/Src/adc.c ****   /** Configure Regular Channel
 105:Core/Src/adc.c ****   */
 106:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_9;
 178              		.loc 1 106 3 view .LVU67
 107:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 179              		.loc 1 107 16 is_stmt 0 view .LVU68
 180 00a8 0922     		movs	r2, #9
 181 00aa 0623     		movs	r3, #6
 108:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 182              		.loc 1 108 7 view .LVU69
 183 00ac 0548     		ldr	r0, .L30
 184 00ae 01A9     		add	r1, sp, #4
 107:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 185              		.loc 1 107 16 view .LVU70
 186 00b0 CDE90123 		strd	r2, r3, [sp, #4]
 187              		.loc 1 108 3 is_stmt 1 view .LVU71
 188              		.loc 1 108 7 is_stmt 0 view .LVU72
 189 00b4 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 190              	.LVL12:
 191              		.loc 1 108 6 view .LVU73
 192 00b8 08B1     		cbz	r0, .L1
 109:Core/Src/adc.c ****   {
 110:Core/Src/adc.c ****     Error_Handler();
 193              		.loc 1 110 5 is_stmt 1 view .LVU74
 194 00ba FFF7FEFF 		bl	Error_Handler
 195              	.LVL13:
 196              	.L1:
 111:Core/Src/adc.c ****   }
 112:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 113:Core/Src/adc.c **** 
 114:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
 115:Core/Src/adc.c **** 
 116:Core/Src/adc.c **** }
 197              		.loc 1 116 1 is_stmt 0 view .LVU75
 198 00be 05B0     		add	sp, sp, #20
 199              		.cfi_def_cfa_offset 4
 200              		@ sp needed
 201 00c0 5DF804FB 		ldr	pc, [sp], #4
 202              	.L31:
 203              		.align	2
 204              	.L30:
 205 00c4 00000000 		.word	hadc1
 206 00c8 00240140 		.word	1073816576
 207              		.cfi_endproc
 208              	.LFE65:
 210              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 211              		.align	1
 212              		.global	HAL_ADC_MspInit
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 217              	HAL_ADC_MspInit:
ARM GAS  /tmp/cccjOHSb.s 			page 7


 218              	.LVL14:
 219              	.LFB66:
 117:Core/Src/adc.c **** 
 118:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 119:Core/Src/adc.c **** {
 220              		.loc 1 119 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 32
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 120:Core/Src/adc.c **** 
 121:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 224              		.loc 1 121 3 view .LVU77
 225              		.loc 1 121 20 is_stmt 0 view .LVU78
 226 0000 1022     		movs	r2, #16
 119:Core/Src/adc.c **** 
 227              		.loc 1 119 1 view .LVU79
 228 0002 30B5     		push	{r4, r5, lr}
 229              		.cfi_def_cfa_offset 12
 230              		.cfi_offset 4, -12
 231              		.cfi_offset 5, -8
 232              		.cfi_offset 14, -4
 233 0004 0546     		mov	r5, r0
 234 0006 89B0     		sub	sp, sp, #36
 235              		.cfi_def_cfa_offset 48
 236              		.loc 1 121 20 view .LVU80
 237 0008 0DEB0200 		add	r0, sp, r2
 238              	.LVL15:
 239              		.loc 1 121 20 view .LVU81
 240 000c 0021     		movs	r1, #0
 241 000e FFF7FEFF 		bl	memset
 242              	.LVL16:
 122:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 243              		.loc 1 122 3 is_stmt 1 view .LVU82
 244              		.loc 1 122 5 is_stmt 0 view .LVU83
 245 0012 2A68     		ldr	r2, [r5]
 246 0014 254B     		ldr	r3, .L38
 247 0016 9A42     		cmp	r2, r3
 248 0018 45D1     		bne	.L32
 123:Core/Src/adc.c ****   {
 124:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 125:Core/Src/adc.c **** 
 126:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 127:Core/Src/adc.c ****     /* ADC1 clock enable */
 128:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 249              		.loc 1 128 5 is_stmt 1 view .LVU84
 250              	.LBB2:
 251              		.loc 1 128 5 view .LVU85
 252              		.loc 1 128 5 view .LVU86
 253 001a 03F56C43 		add	r3, r3, #60416
 254 001e 9A69     		ldr	r2, [r3, #24]
 255              	.LBE2:
 129:Core/Src/adc.c **** 
 130:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 131:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 132:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 133:Core/Src/adc.c ****     PA4     ------> ADC1_IN4
 134:Core/Src/adc.c ****     PA5     ------> ADC1_IN5
ARM GAS  /tmp/cccjOHSb.s 			page 8


 135:Core/Src/adc.c ****     PA6     ------> ADC1_IN6
 136:Core/Src/adc.c ****     PA7     ------> ADC1_IN7
 137:Core/Src/adc.c ****     PB0     ------> ADC1_IN8
 138:Core/Src/adc.c ****     PB1     ------> ADC1_IN9
 139:Core/Src/adc.c ****     */
 140:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 141:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 256              		.loc 1 141 26 is_stmt 0 view .LVU87
 257 0020 0324     		movs	r4, #3
 258              	.LBB3:
 128:Core/Src/adc.c **** 
 259              		.loc 1 128 5 view .LVU88
 260 0022 42F40072 		orr	r2, r2, #512
 261 0026 9A61     		str	r2, [r3, #24]
 128:Core/Src/adc.c **** 
 262              		.loc 1 128 5 is_stmt 1 view .LVU89
 263 0028 9A69     		ldr	r2, [r3, #24]
 264              	.LBE3:
 142:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 265              		.loc 1 142 5 is_stmt 0 view .LVU90
 266 002a 2148     		ldr	r0, .L38+4
 267              	.LBB4:
 128:Core/Src/adc.c **** 
 268              		.loc 1 128 5 view .LVU91
 269 002c 02F40072 		and	r2, r2, #512
 270 0030 0192     		str	r2, [sp, #4]
 128:Core/Src/adc.c **** 
 271              		.loc 1 128 5 is_stmt 1 view .LVU92
 272 0032 019A     		ldr	r2, [sp, #4]
 273              	.LBE4:
 128:Core/Src/adc.c **** 
 274              		.loc 1 128 5 view .LVU93
 130:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 275              		.loc 1 130 5 view .LVU94
 276              	.LBB5:
 130:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 277              		.loc 1 130 5 view .LVU95
 130:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 278              		.loc 1 130 5 view .LVU96
 279 0034 9A69     		ldr	r2, [r3, #24]
 280              	.LBE5:
 281              		.loc 1 142 5 is_stmt 0 view .LVU97
 282 0036 04A9     		add	r1, sp, #16
 283              	.LBB6:
 130:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 284              		.loc 1 130 5 view .LVU98
 285 0038 42F00402 		orr	r2, r2, #4
 286 003c 9A61     		str	r2, [r3, #24]
 130:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 287              		.loc 1 130 5 is_stmt 1 view .LVU99
 288 003e 9A69     		ldr	r2, [r3, #24]
 289 0040 02F00402 		and	r2, r2, #4
 290 0044 0292     		str	r2, [sp, #8]
 130:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 291              		.loc 1 130 5 view .LVU100
 292 0046 029A     		ldr	r2, [sp, #8]
 293              	.LBE6:
ARM GAS  /tmp/cccjOHSb.s 			page 9


 130:Core/Src/adc.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 294              		.loc 1 130 5 view .LVU101
 131:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 295              		.loc 1 131 5 view .LVU102
 296              	.LBB7:
 131:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 297              		.loc 1 131 5 view .LVU103
 131:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 298              		.loc 1 131 5 view .LVU104
 299 0048 9A69     		ldr	r2, [r3, #24]
 300 004a 42F00802 		orr	r2, r2, #8
 301 004e 9A61     		str	r2, [r3, #24]
 131:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 302              		.loc 1 131 5 view .LVU105
 303 0050 9B69     		ldr	r3, [r3, #24]
 304 0052 03F00803 		and	r3, r3, #8
 305 0056 0393     		str	r3, [sp, #12]
 131:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 306              		.loc 1 131 5 view .LVU106
 307 0058 039B     		ldr	r3, [sp, #12]
 308              	.LBE7:
 131:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 309              		.loc 1 131 5 view .LVU107
 140:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 310              		.loc 1 140 5 view .LVU108
 141:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 311              		.loc 1 141 26 is_stmt 0 view .LVU109
 312 005a F023     		movs	r3, #240
 313 005c CDE90434 		strd	r3, r4, [sp, #16]
 314              		.loc 1 142 5 is_stmt 1 view .LVU110
 315 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 316              	.LVL17:
 143:Core/Src/adc.c **** 
 144:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 317              		.loc 1 144 5 view .LVU111
 145:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 146:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 318              		.loc 1 146 5 is_stmt 0 view .LVU112
 319 0064 1348     		ldr	r0, .L38+8
 320 0066 04A9     		add	r1, sp, #16
 145:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 321              		.loc 1 145 26 view .LVU113
 322 0068 CDE90444 		strd	r4, r4, [sp, #16]
 323              		.loc 1 146 5 is_stmt 1 view .LVU114
 324 006c FFF7FEFF 		bl	HAL_GPIO_Init
 325              	.LVL18:
 147:Core/Src/adc.c **** 
 148:Core/Src/adc.c ****     /* ADC1 DMA Init */
 149:Core/Src/adc.c ****     /* ADC1 Init */
 150:Core/Src/adc.c ****     hdma_adc1.Instance = DMA1_Channel1;
 326              		.loc 1 150 5 view .LVU115
 151:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 327              		.loc 1 151 30 is_stmt 0 view .LVU116
 328 0070 0023     		movs	r3, #0
 150:Core/Src/adc.c ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 329              		.loc 1 150 24 view .LVU117
 330 0072 114C     		ldr	r4, .L38+12
ARM GAS  /tmp/cccjOHSb.s 			page 10


 331              		.loc 1 151 30 view .LVU118
 332 0074 114A     		ldr	r2, .L38+16
 152:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 153:Core/Src/adc.c ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 154:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 333              		.loc 1 154 40 view .LVU119
 334 0076 8021     		movs	r1, #128
 151:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 335              		.loc 1 151 30 view .LVU120
 336 0078 C4E90023 		strd	r2, r3, [r4]
 152:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 337              		.loc 1 152 5 is_stmt 1 view .LVU121
 152:Core/Src/adc.c ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 338              		.loc 1 152 30 is_stmt 0 view .LVU122
 339 007c A360     		str	r3, [r4, #8]
 153:Core/Src/adc.c ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 340              		.loc 1 153 5 is_stmt 1 view .LVU123
 341              		.loc 1 154 40 is_stmt 0 view .LVU124
 342 007e 4FF48073 		mov	r3, #256
 155:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 156:Core/Src/adc.c ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 343              		.loc 1 156 25 view .LVU125
 344 0082 4FF48060 		mov	r0, #1024
 154:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 345              		.loc 1 154 40 view .LVU126
 346 0086 C4E90313 		strd	r1, r3, [r4, #12]
 155:Core/Src/adc.c ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 347              		.loc 1 155 5 is_stmt 1 view .LVU127
 348              		.loc 1 156 25 is_stmt 0 view .LVU128
 349 008a 2023     		movs	r3, #32
 350 008c C4E90503 		strd	r0, r3, [r4, #20]
 157:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_MEDIUM;
 351              		.loc 1 157 5 is_stmt 1 view .LVU129
 352              		.loc 1 157 29 is_stmt 0 view .LVU130
 353 0090 4FF48053 		mov	r3, #4096
 158:Core/Src/adc.c ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 354              		.loc 1 158 9 view .LVU131
 355 0094 2046     		mov	r0, r4
 157:Core/Src/adc.c ****     hdma_adc1.Init.Priority = DMA_PRIORITY_MEDIUM;
 356              		.loc 1 157 29 view .LVU132
 357 0096 E361     		str	r3, [r4, #28]
 358              		.loc 1 158 5 is_stmt 1 view .LVU133
 359              		.loc 1 158 9 is_stmt 0 view .LVU134
 360 0098 FFF7FEFF 		bl	HAL_DMA_Init
 361              	.LVL19:
 362              		.loc 1 158 8 view .LVU135
 363 009c 08B1     		cbz	r0, .L34
 159:Core/Src/adc.c ****     {
 160:Core/Src/adc.c ****       Error_Handler();
 364              		.loc 1 160 7 is_stmt 1 view .LVU136
 365 009e FFF7FEFF 		bl	Error_Handler
 366              	.LVL20:
 367              	.L34:
 161:Core/Src/adc.c ****     }
 162:Core/Src/adc.c **** 
 163:Core/Src/adc.c ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 368              		.loc 1 163 5 view .LVU137
ARM GAS  /tmp/cccjOHSb.s 			page 11


 369              		.loc 1 163 5 view .LVU138
 370 00a2 2C62     		str	r4, [r5, #32]
 371              		.loc 1 163 5 view .LVU139
 372 00a4 6562     		str	r5, [r4, #36]
 373              		.loc 1 163 5 view .LVU140
 374              	.L32:
 164:Core/Src/adc.c **** 
 165:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 166:Core/Src/adc.c **** 
 167:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 168:Core/Src/adc.c ****   }
 169:Core/Src/adc.c **** }
 375              		.loc 1 169 1 is_stmt 0 view .LVU141
 376 00a6 09B0     		add	sp, sp, #36
 377              		.cfi_def_cfa_offset 12
 378              		@ sp needed
 379 00a8 30BD     		pop	{r4, r5, pc}
 380              	.LVL21:
 381              	.L39:
 382              		.loc 1 169 1 view .LVU142
 383 00aa 00BF     		.align	2
 384              	.L38:
 385 00ac 00240140 		.word	1073816576
 386 00b0 00080140 		.word	1073809408
 387 00b4 000C0140 		.word	1073810432
 388 00b8 00000000 		.word	hdma_adc1
 389 00bc 08000240 		.word	1073872904
 390              		.cfi_endproc
 391              	.LFE66:
 393              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 394              		.align	1
 395              		.global	HAL_ADC_MspDeInit
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	HAL_ADC_MspDeInit:
 401              	.LVL22:
 402              	.LFB67:
 170:Core/Src/adc.c **** 
 171:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 172:Core/Src/adc.c **** {
 403              		.loc 1 172 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 173:Core/Src/adc.c **** 
 174:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 407              		.loc 1 174 3 view .LVU144
 408              		.loc 1 174 5 is_stmt 0 view .LVU145
 409 0000 0268     		ldr	r2, [r0]
 410 0002 0C4B     		ldr	r3, .L42
 172:Core/Src/adc.c **** 
 411              		.loc 1 172 1 view .LVU146
 412 0004 10B5     		push	{r4, lr}
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 4, -8
 415              		.cfi_offset 14, -4
ARM GAS  /tmp/cccjOHSb.s 			page 12


 416              		.loc 1 174 5 view .LVU147
 417 0006 9A42     		cmp	r2, r3
 172:Core/Src/adc.c **** 
 418              		.loc 1 172 1 view .LVU148
 419 0008 0446     		mov	r4, r0
 420              		.loc 1 174 5 view .LVU149
 421 000a 11D1     		bne	.L40
 175:Core/Src/adc.c ****   {
 176:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 177:Core/Src/adc.c **** 
 178:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 179:Core/Src/adc.c ****     /* Peripheral clock disable */
 180:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 422              		.loc 1 180 5 is_stmt 1 view .LVU150
 423 000c 0A4A     		ldr	r2, .L42+4
 181:Core/Src/adc.c **** 
 182:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 183:Core/Src/adc.c ****     PA4     ------> ADC1_IN4
 184:Core/Src/adc.c ****     PA5     ------> ADC1_IN5
 185:Core/Src/adc.c ****     PA6     ------> ADC1_IN6
 186:Core/Src/adc.c ****     PA7     ------> ADC1_IN7
 187:Core/Src/adc.c ****     PB0     ------> ADC1_IN8
 188:Core/Src/adc.c ****     PB1     ------> ADC1_IN9
 189:Core/Src/adc.c ****     */
 190:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 424              		.loc 1 190 5 is_stmt 0 view .LVU151
 425 000e F021     		movs	r1, #240
 180:Core/Src/adc.c **** 
 426              		.loc 1 180 5 view .LVU152
 427 0010 9369     		ldr	r3, [r2, #24]
 428              		.loc 1 190 5 view .LVU153
 429 0012 0A48     		ldr	r0, .L42+8
 430              	.LVL23:
 180:Core/Src/adc.c **** 
 431              		.loc 1 180 5 view .LVU154
 432 0014 23F40073 		bic	r3, r3, #512
 433 0018 9361     		str	r3, [r2, #24]
 434              		.loc 1 190 5 is_stmt 1 view .LVU155
 435 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 436              	.LVL24:
 191:Core/Src/adc.c **** 
 192:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0|GPIO_PIN_1);
 437              		.loc 1 192 5 view .LVU156
 438 001e 0848     		ldr	r0, .L42+12
 439 0020 0321     		movs	r1, #3
 440 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 441              	.LVL25:
 193:Core/Src/adc.c **** 
 194:Core/Src/adc.c ****     /* ADC1 DMA DeInit */
 195:Core/Src/adc.c ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 442              		.loc 1 195 5 view .LVU157
 443 0026 206A     		ldr	r0, [r4, #32]
 196:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 197:Core/Src/adc.c **** 
 198:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 199:Core/Src/adc.c ****   }
 200:Core/Src/adc.c **** }
ARM GAS  /tmp/cccjOHSb.s 			page 13


 444              		.loc 1 200 1 is_stmt 0 view .LVU158
 445 0028 BDE81040 		pop	{r4, lr}
 446              		.cfi_remember_state
 447              		.cfi_restore 14
 448              		.cfi_restore 4
 449              		.cfi_def_cfa_offset 0
 450              	.LVL26:
 195:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 451              		.loc 1 195 5 view .LVU159
 452 002c FFF7FEBF 		b	HAL_DMA_DeInit
 453              	.LVL27:
 454              	.L40:
 455              		.cfi_restore_state
 456              		.loc 1 200 1 view .LVU160
 457 0030 10BD     		pop	{r4, pc}
 458              	.L43:
 459 0032 00BF     		.align	2
 460              	.L42:
 461 0034 00240140 		.word	1073816576
 462 0038 00100240 		.word	1073876992
 463 003c 00080140 		.word	1073809408
 464 0040 000C0140 		.word	1073810432
 465              		.cfi_endproc
 466              	.LFE67:
 468              		.global	hdma_adc1
 469              		.section	.bss.hdma_adc1,"aw",%nobits
 470              		.align	2
 473              	hdma_adc1:
 474 0000 00000000 		.space	68
 474      00000000 
 474      00000000 
 474      00000000 
 474      00000000 
 475              		.global	hadc1
 476              		.section	.bss.hadc1,"aw",%nobits
 477              		.align	2
 480              	hadc1:
 481 0000 00000000 		.space	48
 481      00000000 
 481      00000000 
 481      00000000 
 481      00000000 
 482              		.text
 483              	.Letext0:
 484              		.file 2 "/home/paul/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-none
 485              		.file 3 "/home/paul/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-none
 486              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 487              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 488              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 489              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 490              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 491              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 492              		.file 10 "Core/Inc/adc.h"
 493              		.file 11 "Core/Inc/main.h"
 494              		.file 12 "<built-in>"
ARM GAS  /tmp/cccjOHSb.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
     /tmp/cccjOHSb.s:19     .text.MX_ADC1_Init:00000000 $t
     /tmp/cccjOHSb.s:25     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/cccjOHSb.s:205    .text.MX_ADC1_Init:000000c4 $d
     /tmp/cccjOHSb.s:480    .bss.hadc1:00000000 hadc1
     /tmp/cccjOHSb.s:211    .text.HAL_ADC_MspInit:00000000 $t
     /tmp/cccjOHSb.s:217    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
     /tmp/cccjOHSb.s:385    .text.HAL_ADC_MspInit:000000ac $d
     /tmp/cccjOHSb.s:473    .bss.hdma_adc1:00000000 hdma_adc1
     /tmp/cccjOHSb.s:394    .text.HAL_ADC_MspDeInit:00000000 $t
     /tmp/cccjOHSb.s:400    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
     /tmp/cccjOHSb.s:461    .text.HAL_ADC_MspDeInit:00000034 $d
     /tmp/cccjOHSb.s:470    .bss.hdma_adc1:00000000 $d
     /tmp/cccjOHSb.s:477    .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
Error_Handler
HAL_ADC_ConfigChannel
memset
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
